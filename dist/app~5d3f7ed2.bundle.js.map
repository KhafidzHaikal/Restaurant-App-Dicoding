{"version":3,"file":"app~5d3f7ed2.bundle.js","mappings":";yYACA,knGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA6BF,QA1ByB,CACjBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,wCAAS,IAAE,uBACJP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAF5B,EAGxB,EAEME,iBAAgB,WAAG,iHACTT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD1B,EAEzB,EAEMY,eAAc,SAACC,GAAY,iHACjBZ,EAAS,uCAAEa,IAAId,EAAmBa,IAAU,0CAD3B,EAEjC,EAEME,cAAa,SAACF,GAAY,oGAEzBA,EAAWG,eAAe,MAAO,CAAF,wCAAS,IAAE,uBACjCf,EAAS,uCAAEgB,IAAIjB,EAAmBa,IAAU,0CAH5B,EAIhC,EAEMK,iBAAgB,SAACV,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,gDCzBF,QANqB,CACnBW,KAAM,GAAF,OAAKrB,EAAAA,EAAAA,SAAe,QACxBsB,OAAQ,GAAF,OAAKtB,EAAAA,EAAAA,SAAe,UAC1BuB,OAAQ,SAACb,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCJhD,45NAeA,QAdgB,yBADhB,4FACgB,SADhB,QAMG,EALa,EAWb,OAZH,EACgB,OADhB,EACgB,4CACd,sGACyBc,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,qFAED,WAAyBnB,GAAE,yFACFc,MAAMC,EAAAA,OAAoBf,IAAI,OAAvC,OAARgB,EAAW,EAAH,cACWA,EAASC,OAAM,OAAxB,OAAVG,EAAa,EAAH,uBACTA,GAAU,2CAClB,+CAZH,6DAYG,EAXa,mCCOhB,QATe,CACbC,SAAU,uCACVC,eAAgB,oDAChBC,WAAY,2BACZlC,cAAe,wBACfE,iBAAkB,EAClBC,kBAAmB,gECCfgC,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,mBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-resto-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restodb-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestoIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) return '';\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n\r\n  async addRestauarant(restaurant) {\r\n    return (await dbPromise).add(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n\r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) return '';\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n};\r\n\r\nexport default FavoriteRestoIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  LIST: `${CONFIG.BASE_URL}list`,\r\n  REVIEW: `${CONFIG.BASE_URL}review`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass TheRestoDB {\r\n  static async RestaurantsAll() {\r\n    const response = await fetch(API_ENDPOINT.LIST);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailResto(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const dataDetail = await response.json();\r\n    return dataDetail;\r\n  }\r\n}\r\n\r\nexport default TheRestoDB;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/small/',\r\n  CACHE_NAME: 'restaurant-catalog-cache',\r\n  DATABASE_NAME: 'restaurant-catalog-db',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurant',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime';\nimport '../styles/main.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#navigationDrawer'),\n  content: document.querySelector('#contentBody'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","addRestauarant","restaurant","add","putRestaurant","hasOwnProperty","put","deleteRestaurant","LIST","REVIEW","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","dataDetail","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}